<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.section{
  display: flex;
  align-items: center;
  justify-content: center;  
  width: 100%;
  height: 100%;
}
.icon_qianjin{
  width:38rpx;
  height: 48rpx;
  position:absolute;
  right: 0;
  margin-top:30rpx;
}

</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'



export default class extends wepy.app {
  config = {
    pages: [
      'pages/index/index',
      'pages/index/my_responderList',
      'pages/index/question_detail',// 问题详情
      'pages/index/connect_customer', //客服
      'pages/index/connectUs',
      'pages/index/describe_question',


      'pages/recommend/recommend_myself',
      'pages/recommend/recommend_reason',
      'pages/recommend/choose_recommend', //选择想推荐的人
      'pages/recommend/choose_recommend_second',


      'pages/zrww/search_result',
      'pages/zrww/keywords_search',
      'pages/zrww/zrww',
      'pages/zrww/category_search',
      'pages/zrww/category_search_second',
      
      
      'pages/basicInfo/answer_record', //回答记录
      'pages/basicInfo/question_record',//提问记录
      'pages/basicInfo/focus',//个人中心、我的
      'pages/basicInfo/basic_info',//个人中心、我的


      'pages/out/privacyProtection',

      'pages/wallet/invitee_list',//邀请列表
      'pages/wallet/inviter_rank',//邀请排行
      'pages/wallet/wallet',//钱包
      
      
      'pages/be_responder',
      'pages/invite_friends',//邀请好友
      'pages/no_content',//暂无内容

      'pages/answerer_introduce',//回答者介绍

      'pages/login/login_phone',
      'pages/login/invitation_code',//邀请码
      'pages/login/login',
      'pages/login/choose_category',//选择分类

     
      'pages/treaty',
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '找人问问',
      navigationBarTextStyle: 'black'
    },
    "permission": {
    "scope.userLocation": {
      "desc": "你的位置信息将用于小程序位置接口的效果展示"
    }
   }, 
  }

  globalData = {
    userInfo: null,
    basicInfo:null,
    unionId:'',
    domain:'http://192.168.1.253',
    // domain:'https://app.50waizhuan.com',
    accessToken:'',
    randomKey:'',
    isLogin:false,
    model:'',//登录手机信息
    categorieList:'',
    adCode:null,
    district:'',//当前位置城市
    latitude:'',
    longitude:'',
    mobileVersion:'minipro 1.0',
    whyBecomeResponderPic:'',
    whyInvitationPic:'',
    serviceDescriptionPic:'',
    code:'',

  }
  

  constructor () {
    super()
    this.use('requestfix')
  }
  

  onLaunch() {
    this.login()
     wepy.getSystemInfo({
       success: function (res) {
        this.globalData.model=res.model;
       }
      });
    wepy.request({
      url: this.globalData.domain+'/ww/api/v1/common/sys',
      method: 'post',
      header:{
          'JWT': 'true',
          'content-type':'application/json',
      },
      dataType: 'json', //如果设为json，会尝试对返回的数据做一次 JSON.parse
      success: res => {
        wx.setStorageSync('whyBecomeResponderPic',res.data.data.whyBecomeResponderPic);
        wx.setStorageSync('whyInvitationPic',res.data.data.whyInvitationPic);
        wx.setStorageSync('serviceDescriptionPic',res.data.data.serviceDescriptionPic);
        wx.setStorageSync('commonProblemList',res.data.data.commonProblemList);
        wx.setStorageSync('questionCaseList',res.data.data.questionCaseList);
        this.globalData.whyBecomeResponderPic=res.data.data.whyBecomeResponderPic;
        this.globalData.whyInvitationPic=res.data.data.whyInvitationPic;
        this.globalData.serviceDescriptionPic=res.data.data.serviceDescriptionPic;
        this.globalData.commonProblemList=res.data.data.commonProblemList;
        this.globalData.categorieList=res.data.data.categorieList;
      },
      fail: () => {},
    });
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
         wepy.login({
          success(res){
            this.globalData.code=res.code;
          }
        });
        
      }, s * 1000)
    })
  }

  async login () {
    const data = await this.sleep(0)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
