<style lang="less">
.login{
  display: flex;
  align-items: center;
  justify-content: center; 
  width: 710rpx;
  height: 80rpx;
  line-height: 20px;
  border-radius: 5px;
  color: #ffffff;
  font-size: 14px;
}
.login-wechat{
  position: fixed;
  bottom:10rpx;
  background-color: #5383c3;
  color: #ffffff;
}
.zrww{
  // margin-top: 0rpx;
  color: #333333;
  font-size: 24px;
  font-weight: bold;
}

.fontarea{
  position: absolute;
  left: 80rpx;
}

.login-phone{
  margin-top:40rpx;
  background-color: #f6f6f6;
  color: #5383c3;
}
button::after {
  border: none;
}
.category{
   display: flex;
   flex-wrap: wrap;
  //  height: 80%;
}
.categoryButton{
  width:200rpx;
  height: 100rpx;
  margin-left:20rpx;
  margin-top:20rpx;
  margin-right:20rpx;
  
  background-color: #f6f6f6;
  border-radius: 20rpx;
  line-height: 30rpx;//缩小行间距

  display: table;

}
.categoryButton text{
  font-size: 16px;
  vertical-align:middle;
  text-align: center;
  display: table-cell;
}
.choosed{
  background-color: #5383C3;
}
</style>
<template>
  <view>
    <view class="section">
      <text class="zrww">选择你的分类</text>
    </view>
    <scroll-view scroll-y="true" style="height:{{windowHeight-180}}rpx">
      <view class="category">
          <repeat for="{{categoryList}}" item="item">
            <view wx:if="{{item.level==1}}">
              <button class="categoryButton {{item.checked?'choosed':''}}" @tap="choose({{item.categoryId}})" ><text>{{item.name}}</text></button>
            </view>
          </repeat>
      </view>
    </scroll-view>
  
   
    <view class="section">
      <button class="login login-wechat"  @tap='confirm()'>{{button}}</button>
    </view>
  
   
  </view>
</template>

<script>
  import wepy from 'wepy'
  import utils from "@/mixins/utils";
  export default class choose_category extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }
    components = {
    }

    methods = {
      choose(categoryId){
        let self=this;
        for(let i=0;i<this.categoryList.length;i++){
          let cate=this.categoryList[i];
          if(cate.categoryId==categoryId){
            cate.checked=!cate.checked;
            if(cate.checked==true){
              self.button="确定";
            }else{
              self.button="跳过";
            }
          }else{
            cate.checked=false;
          }
        }
      }
     
    }
    mixins=[utils]

    data={
        categoryList: [],
        button:'跳过',
    }
    watch={
      categoryId(newValue, oldValue) {
          console.log(`num value: ${oldValue} -> ${newValue}`)
      }
    }
    confirm(){
       let self=this;
       let categoryId=self.categoryId;
       for(let i=0;i<this.categoryList.length;i++){
          let cate=this.categoryList[i];
          if(cate.checked==true){
            categoryId=cate.categoryId;
          }
        }
        // if(categoryId==''){
        //   wepy.showToast({
        //     title: '请选择一个分类',
        //     icon: 'none',
        //     duration: 3000
        //   })
        //   return;
        // }
        let json={};
        json.categoryId=categoryId;
        let obj=self.genObj(json);
        wepy.request({
          url:  self.domain+'/ww/api/v1/common/choiceCategory',
          method: 'post',
          data: {object:obj},
          header:{
            'JWT': 'true',
            'content-type':'application/json',
            'Authorization':'Bearer '+self.accessToken
          },
          success(res) {
            let result=res.data
             if(result.code==100){
               wepy.reLaunch({
                url:'/pages/index/index'
              })
            }
       
          }
        })

    }

    

    events = {
      // 'index-emit': (...args) => {
      //   let $event = args[args.length - 1]
      //   console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      // }
    }

    onLoad(options) {
      
      let self = this
      // wepy.getLocation({
      //         type: 'gcj02', // 返回可以用于wx.openLocation的经纬度
      //         success(res) {
      //           const latitude = res.latitude
      //           const longitude = res.longitude
      //           console.log(latitude+","+longitude);
             
      //         }
      // })
  
      self.categoryList=self.$parent.globalData.categorieList
    }
  }
</script>
