<style lang="less">
.section{
  display: flex;
  align-items: center;
  justify-content: center;  
  width: 100%;
  height: 100%;
}
.login{
  display: flex;
  align-items: center;
  justify-content: center; 
  width: 670rpx;
  height: 100rpx;
  line-height: 20px;
  border-radius: 5px;
  color: #ffffff;
  font-size: 32rpx;
}
.zrww{
  margin-top: 40rpx;
  color: #333333;
  font-size: 24px;
  font-weight: bold;
}

.login-wechat{
  margin-top:72rpx;
  background-color: #5383c3;
  color: #ffffff;
}
.login-phone{
  margin-top:62rpx;
  background-color: #f6f6f6;
  color: #5383c3;
}
.trety{
  margin-top:656rpx;
  margin-bottom:96rpx;
  color: #878787;
  font-size: 12px;
}
.href{
   color: #5383c3;
}
</style>
<template>
  <view>
    <view class="section">
      <text class="zrww">找人问问，登录</text>
    </view>
    <view class="section">
      <button class="login login-wechat" open-type="getUserInfo"  bindgetuserinfo="getUserInfo">微信登录/注册</button>
    </view>
    <view class="section">
      <button class="login login-phone" @tap="phone_login()">手机验证码登录</button>
    </view>
    <view class="section">
      <text class="trety">登录即代表你同意</text><text class="trety href" @tap="userAgreement(1)">《用户协议》</text><text class="trety">和</text><text class="trety href" @tap="privacyProtection(2)">《隐私保护》</text>
    </view>
     <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'
  import utils from "../mixins/utils";
  export default class login extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }
    components = {
      toast: Toast
    }


    data = {
      isGetUserLocation:false,
    }
    
    mixins=[utils]

    methods = {
      userAgreement(type){
        wepy.navigateTo({
            url:'/pages/treaty?type='+type
          })
      },
      privacyProtection(type){
        wepy.navigateTo({
            url:'/pages/treaty?type='+type
          })
      },
      phone_login(){
        let self=this;
        self.getUserLocation();
        if(self.isGetUserLocation){
          self.getAdCode();
          wepy.navigateTo({
            url:'/pages/login_phone?title=手机验证码登录&submit=登录&type=1'
          })
        }
      }
    }

    getUserLocation(){
      let self=this;
      wx.getSetting({
            success(res) {
              if (!res.authSetting['scope.userLocation']) {
                wx.showModal({
                    title: '是否授权当前位置',
                    content: '需要获取您的地理位置，请确认授权，否则功能将无法使用',
                    success: function (tip) {
                        if (tip.confirm) {
                            wx.openSetting({
                                success: function (data) {
                                    if (data.authSetting["scope.userLocation"] === true) {
                                        wx.showToast({
                                            title: '授权成功',
                                            icon: 'success',
                                            duration: 1000
                                        })
                                        self.isGetUserLocation = true;
                                        self.$apply();
                                    } else {
                                        wx.showToast({
                                            title: '授权失败',
                                            icon: 'none',
                                            duration: 1000
                                        })
                                    }
                                }
                            })
                        }
                    }
                })
              }else{
                self.isGetUserLocation = true;
                self.$apply();
              }
            }
        })
    }
    async getUserInfo(e){
      let self=this;
      let userInfo=e.detail.userInfo;
      if(userInfo==undefined){
         wepy.showToast({
          title: '授权之后才能访问',
          icon: 'none',
          duration: 3000
        })
      }else{
        self.$parent.globalData.userInfo=userInfo;
        self.$parent.globalData.isLogin=true;
        self.$apply();
        let isRegist= await self.login(e.detail.encryptedData,e.detail.iv);
        if(!isRegist){
           self.getUserLocation();
           if(self.isGetUserLocation){
              wepy.navigateTo({
                url:'/pages/login_phone?title=绑定手机号&submit=确认&type=2'
              })
          }
        }else{
          self.getUserLocation();
          if(self.isGetUserLocation){
            self.getAdCode();
            wepy.switchTab({
              url:'/pages/answerer_introduce'
            })
          }

        }
      }
    }

    login(encryptedData,iv){
      let _this=this;
      return new Promise((resolve, reject) => {
         resolve(true)
        // wepy.login({
        //       success(res){
        //         wepy.request({
        //           url: _this.$parent.globalData.domain+"/wz/wzShare/code2Session",
        //           method: 'get',
        //           data: {code:res.code,encryptedData:encryptedData,iv:iv},
        //           header:{
        //             'content-type': 'application/x-www-form-urlencoded',
        //           },
        //           dataType: 'json',
        //           success: function (data) {
        //             // console.log(data);
        //             if(data.data.code==100){
        //               resolve(data.data.data.isRegist);
        //             }else{
        //               console.log("登录 、 解密unidode");
        //               console.log(data.data.msg);
        //               wepy.showToast({
        //                 title: '请求失败！请重试',
        //                 icon: 'none',
        //                 duration: 3000
        //               })
        //             }
        //           }
        //         });
        //       }
        // });
    })
    }
    getAdCode(){
      let self=this;
      wx.getLocation({
          type: 'gcj02', // 返回可以用于wx.openLocation的经纬度
          success(res) {
            let latitude = res.latitude,
                longitude = res.longitude
                self.$parent.globalData.latitude=latitude
                self.$parent.globalData.longitude=longitude
            wepy.request({
                url: 'http://api.map.baidu.com/geocoder/v2/?&location=' + latitude + ',' + longitude + '&output=json&ak=fpmIGPqo4DYm61tvTuKHgT9QxWG5cIdc',
                method: 'get',
                success: function (res) {
                    let result = res.data.result,
                        addressComponent = result.addressComponent,
                        adcode = addressComponent.adcode
                        self.$parent.globalData.adCode=adcode;
                        self.$apply();
                },
                error: function (res) {
                    this.getAdCode(latitude, longitude);
                }
              });
          }
      })
    }

 
    events = {
      // 'index-emit': (...args) => {
      //   let $event = args[args.length - 1]
      //   console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      // }
    }

    onLoad(options) {
      let self = this
      self.responderId=options.responderId;
      self.$apply();
  
      self.getAdCode();
    }
  }
</script>
